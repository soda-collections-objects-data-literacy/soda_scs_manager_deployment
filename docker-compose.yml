services:
  manager:
    image: ghcr.io/soda-collections-objects-data-literacy/soda_scs_manager_images:drupal11.0-php8.3-apache-bookworm-soda-scs-manager-dev
    volumes:
      - drupal-modules:/var/www/html/modules
      - drupal-profiles:/var/www/html/profiles
      - drupal-themes:/var/www/html/themes
      - drupal-libraries:/var/www/html/libraries
      - drupal-sites:/var/www/html/sites
    environment:
      DB_DRIVER: ${DB_DRIVER}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DRUPAL_USER: ${DRUPAL_USER}
      DRUPAL_PASSWORD: ${DRUPAL_PASSWORD}
      SITE_NAME: ${SITE_NAME}
    depends_on:
      - database
      - reverse-proxy
      - portainer-ce
    networks:
      - reverse-proxy
    restart: unless-stopped
    deploy:
      mode: global
      labels:
        - traefik.enable=true
        - traefik.docker.network=reverse-proxy
        - traefik.constraint-label=reverse-proxy
        - traefik.http.routers.manager.rule=Host(`manager.${DOMAIN}`)
        - traefik.http.routers.manager.entrypoints=http,https
        - traefik.http.routers.manager.middlewares=https-redirect
        - traefik.http.routers.manager.tls=true
        - traefik.http.routers.manager.tls.certresolver=le
        - traefik.http.services.manager.loadbalancer.server.port=80

  database:
    image: mariadb:11.5.2
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_HOST: localhost
    volumes:
      - database-data:/var/lib/mysql
    depends_on:
      - reverse-proxy
      - portainer-ce
    ports:
      - "3306:3306"
    networks:
      - reverse-proxy
    restart: unless-stopped
    deploy:
      mode: global
      labels:
        - traefik.enable=false
    
  agent:
    image: portainer/agent:2.21.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - reverse-proxy
    deploy:
      mode: global
      labels:
        - traefik.enable=false
      placement:
        constraints: [node.platform.os == linux]
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:2.21.0
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - portainer-data:/data
    depends_on:
      - reverse-proxy
    networks:
      - reverse-proxy
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
        - traefik.enable=true
        - traefik.docker.network=reverse-proxy
        - traefik.constraint-label=reverse-proxy
        - traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN}`)
        - traefik.http.routers.portainer.entrypoints=http,https
        - traefik.http.routers.portainer.middlewares=https-redirect
        - traefik.http.routers.portainer.tls=true
        - traefik.http.routers.portainer.tls.certresolver=le
        - traefik.http.services.portainer.loadbalancer.server.port=9000
    restart: unless-stopped

  reverse-proxy:
    # Use the latest v3.0.x Traefik image available
    image: traefik:3.0
    ports:
      # Listen on port 80, default for HTTP, necessary to redirect to HTTPS
      - 80:80
      # Listen on port 443, default for HTTPS
      - 443:443
    networks:
      - reverse-proxy
    deploy:
      mode: global
      placement:
        constraints:
          # Make the traefik service run only on the node with this label
          # as the node with it has the volume for the certificates
          - node.labels.reverse-proxy.reverse-proxy-certificates == true
      labels:
        - traefik.enable=true
        - traefik.docker.network=reverse-proxy
        - traefik.constraint-label=reverse-proxy
        - traefik.http.middlewares.admin-auth.basicauth.users=${TRAEFIK_USERNAME}:${TRAEFIK_HASHED_PASSWORD}
        - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
        - traefik.http.routers.reverse-proxy.rule=Host(`traefik.${DOMAIN}`)
        - traefik.http.routers.reverse-proxy.entrypoints=http,https
        - traefik.http.routers.reverse-proxy.middlewares=admin-auth,https-redirect
        - traefik.http.routers.reverse-proxy.tls=true
        - traefik.http.routers.reverse-proxy.tls.certresolver=le
        - traefik.http.routers.reverse-proxy.service=api@internal
        - traefik.http.services.reverse-proxy.loadbalancer.server.port=8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - reverse-proxy-certificates:/certificates
    command:
      - --providers.docker
      - --providers.docker.constraints=Label(`traefik.constraint-label, reverse-proxy`)
      - --providers.docker.exposedbydefault=false
      - --providers.swarm.endpoint=unix:///var/run/docker.sock
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --certificatesresolvers.le.acme.email=${TRAEFIK_EMAIL}
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --accesslog
      - --log
      - --api
    restart: unless-stopped

volumes:
  drupal-libraries:
  drupal-modules:
  drupal-profiles:
  drupal-sites:
  drupal-themes:
  database-data:
  portainer-data:
  reverse-proxy-certificates:

networks:
  database-network:
  reverse-proxy:
    driver: overlay
    attachable: true
